IAddNewsViaEmail
================

This integrates with redmine and lets news and comments for news creation via email.
Created with Ruby 1.8.7, Rails 2.3.5 and Redmine 0.8.4 (also tested with 0.8.8)

The main idea is to integrate with scm and update issues on deployments, please read "Advanced" for that.

Example
=======

Make sure You have the permissions to manage news (or comment news).

For creating news, send an email (almost the same as issue creation via email)

start_sample:
Project: project_identifier
Summary: one line summary, may contain spaces, optional
Type: news
This is just a
multiline
description of the news.
end_sample.

Summary is not mandatory. Title comes from email subject. Type and Project are mandatory, case sensitive. 
Description is also mandatory (at least one symbol, this is a rule set by Redmine).

# TODO
# To comment on news: just push the reply button, when You have been notified about the news via email.

Notifications should be enabled in Administration/Settings/Email Notifications.

Advanced
========
Do You have integration with scm?
Are You using "Fixes #2" or Implements "#11265" in your commits?
Is there a difference between "Resolved" and "Production"/"Testing" statuses in Your projects?
If all of those are true, You probably are changing all fixed issues status from 1st to 2nd on deployments manually.

No more!

On receiving news about deployment issue statuses are automatically updated.
Use http://github.com/titas/i_notify_about_deployment plugin and You won't even need to send emails manually.

But just in case, email format should be:

Project: project_identifier
Summary: one line summary, may contain spaces, optional
Type: news
Revision: revision
ChangeIssueStatus: true
multiline
text

Advanced/Install
================

run script/install git://github.com/titas/redmine-news-via-email-plugin.git
This runs rake i_add_news_via_email:install RAILS_ENV=production. If you want
to test in development environment or You have manually copied the plugin directory
run rake i_add_news_via_email:install with selected environment yourself.
# TODO
# uninstall - basically drop Changeset.deployed and delete config.yml field created
Now go to #{RAILS_ROOT}/config/settings.yml and find commit_deployed_status_id attribute,
change the default value to the status id You want issue status to update to.

Now You need to create a user that will notify redmine with email. User needs a workflow and permissions,
You can do it manually or autogenerate with rake:
rake i_add_news_via_email:create_robo_role login=robologin password=robopassword mail=robo_email@gmail.com project=sandbox

When email with revision is received each changeset that occured before in the same repository
and is not deployed is checked as deployed and its issue statuses are updated.

If You change status from the default status that is set after "Fixes #XXX", the issue status will not update.

You are all set up, now all You need is http://github.com/titas/i_notify_about_deployment

Advanced/Test
================

"Ok, I have done everyting, does it work?"

Fix an issue on a project with i_notify installed.
Commit with "Fixes #XXX" (status should change to Your configured status:
go to repository tab and then back to issue if You haven't set up a cron task for this).
Push
cap deploy
Check project news

On not so great success check permissions to post news, edit issues, manage repo and changesets, workflow of the notifier
emails, passwords, redmine configuration (config.yml commit_deployed_status_id,commit_fix_status_id), environments,
or contact me on github.

Feedback
========
Is very appreciated!
Write me a message on github if You are using this :)

Copyright (c) 2010 Titas Norkunas, released under the MIT license
